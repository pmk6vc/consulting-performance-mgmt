name: Actions for pull requests to main

on:
  pull_request:
    branches: [ main ]

env:
  TF_WORKSPACE_NAME: production

jobs:
  mvn-verify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: maven

      - name: Run the Maven verify phase
        run: mvn --batch-mode --update-snapshots --fail-at-end verify

  snyk-security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # TODO: Consider building Docker image and using Snyk Docker image scan instead
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/maven@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif

  terraform:
    runs-on: ubuntu-latest
    environment: PRODUCTION
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform format
        working-directory: infra
        run: terraform fmt -check

      # TODO: Check out keyless authentication for service accounts
      - name: Terraform init
        working-directory: infra
        run: terraform init
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_CREDENTIALS }}

      - name: Terraform select workspace
        working-directory: infra
        run: terraform workspace select $TF_WORKSPACE_NAME
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_CREDENTIALS }}

      - name: Terraform validate
        working-directory: infra
        run: terraform validate -no-color

      - name: Terraform plan
        working-directory: infra
        run: terraform plan -no-color
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_CREDENTIALS }}
          TF_VAR_gcp_project_id: ${{ vars.GCP_PROJECT_ID }}
          TF_VAR_db_username_secret: ${{ vars.DB_USERNAME_SECRET }}
          TF_VAR_db_username_secret_version: ${{ vars.DB_USERNAME_SECRET_VERSION }}
          TF_VAR_db_password_secret: ${{ vars.DB_PASSWORD_SECRET }}
          TF_VAR_db_password_secret_version: ${{ vars.DB_PASSWORD_SECRET_VERSION }}
          TF_VAR_cloud_sql_region: ${{ vars.CLOUD_SQL_REGION }}